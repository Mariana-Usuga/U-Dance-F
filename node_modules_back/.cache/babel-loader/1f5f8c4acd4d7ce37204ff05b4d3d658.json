{"ast":null,"code":"/* eslint-disable import/prefer-default-export */\nimport { LOGIN_SUCCESSFUL, ROLE, UPDATE_SUCCESSFUL } from '../types/userTypes';\nimport { postSignUp, postUpdate } from '../service/userService';\nexport const fetchSignUp = user => async dispatch => {\n  const res = await postSignUp(user);\n  const {\n    JWT: token\n  } = res.data;\n  localStorage.setItem('token', JSON.stringify(token));\n  dispatch({\n    type: LOGIN_SUCCESSFUL,\n    payload: token\n  });\n};\nexport const fetchRole = role => async dispatch => {\n  dispatch({\n    type: ROLE,\n    payload: role\n  });\n};\nexport const fecthGetUser = token => async dispatch => {\n  const userRes = await postUpdate(id, user);\n  dispatch({\n    type: UPDATE_SUCCESSFUL,\n    payload: userRes.data\n  });\n};\nexport const fecthUpdateUser = (id, user) => async dispatch => {\n  const userRes = await postUpdate(id, user);\n  dispatch({\n    type: UPDATE_SUCCESSFUL,\n    payload: userRes.data\n  });\n}; // export const fetchLogin = (email, password) => async (dispatch) => {\n//   const res = await postLogin(email, password);\n//   if (res.statusText === 'OK') {\n//     const { JWT: token } = res.data;\n//     localStorage.setItem('token', JSON.stringify(token));\n//     dispatch(loginUserSucess(token));\n//     return token;\n//   }\n//   dispatch(loginUserFailure());\n//   return null;\n// };","map":{"version":3,"sources":["/mnt/c/Users/Mariana/Desktop/Projects/U-Dance-F/src/store/actions/userActions.js"],"names":["LOGIN_SUCCESSFUL","ROLE","UPDATE_SUCCESSFUL","postSignUp","postUpdate","fetchSignUp","user","dispatch","res","JWT","token","data","localStorage","setItem","JSON","stringify","type","payload","fetchRole","role","fecthGetUser","userRes","id","fecthUpdateUser"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,IAA3B,EAAiCC,iBAAjC,QAA0D,oBAA1D;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,wBAAvC;AAEA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACvD,QAAMC,GAAG,GAAG,MAAML,UAAU,CAACG,IAAD,CAA5B;AACA,QAAM;AAAEG,IAAAA,GAAG,EAAEC;AAAP,MAAiBF,GAAG,CAACG,IAA3B;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeL,KAAf,CAA9B;AACAH,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEhB,gBADC;AAEPiB,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAID,CARM;AAUP,OAAO,MAAMQ,SAAS,GAAIC,IAAD,IAAU,MAAOZ,QAAP,IAAoB;AACrDA,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEf,IADC;AAEPgB,IAAAA,OAAO,EAAEE;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,YAAY,GAAIV,KAAD,IAAW,MAAOH,QAAP,IAAoB;AACzD,QAAMc,OAAO,GAAG,MAAMjB,UAAU,CAACkB,EAAD,EAAKhB,IAAL,CAAhC;AACAC,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,iBADC;AAEPe,IAAAA,OAAO,EAAEI,OAAO,CAACV;AAFV,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMY,eAAe,GAAG,CAACD,EAAD,EAAKhB,IAAL,KAAc,MAAOC,QAAP,IAAoB;AAC/D,QAAMc,OAAO,GAAG,MAAMjB,UAAU,CAACkB,EAAD,EAAKhB,IAAL,CAAhC;AACAC,EAAAA,QAAQ,CAAC;AACPS,IAAAA,IAAI,EAAEd,iBADC;AAEPe,IAAAA,OAAO,EAAEI,OAAO,CAACV;AAFV,GAAD,CAAR;AAID,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* eslint-disable import/prefer-default-export */\nimport { LOGIN_SUCCESSFUL, ROLE, UPDATE_SUCCESSFUL } from '../types/userTypes';\nimport { postSignUp, postUpdate } from '../service/userService';\n\nexport const fetchSignUp = (user) => async (dispatch) => {\n  const res = await postSignUp(user);\n  const { JWT: token } = res.data;\n  localStorage.setItem('token', JSON.stringify(token));\n  dispatch({\n    type: LOGIN_SUCCESSFUL,\n    payload: token,\n  });\n};\n\nexport const fetchRole = (role) => async (dispatch) => {\n  dispatch({\n    type: ROLE,\n    payload: role,\n  });\n};\n\nexport const fecthGetUser = (token) => async (dispatch) => {\n  const userRes = await postUpdate(id, user);\n  dispatch({\n    type: UPDATE_SUCCESSFUL,\n    payload: userRes.data,\n  });\n};\n\nexport const fecthUpdateUser = (id, user) => async (dispatch) => {\n  const userRes = await postUpdate(id, user);\n  dispatch({\n    type: UPDATE_SUCCESSFUL,\n    payload: userRes.data,\n  });\n};\n\n// export const fetchLogin = (email, password) => async (dispatch) => {\n//   const res = await postLogin(email, password);\n//   if (res.statusText === 'OK') {\n//     const { JWT: token } = res.data;\n//     localStorage.setItem('token', JSON.stringify(token));\n//     dispatch(loginUserSucess(token));\n//     return token;\n//   }\n//   dispatch(loginUserFailure());\n//   return null;\n// };\n"]},"metadata":{},"sourceType":"module"}